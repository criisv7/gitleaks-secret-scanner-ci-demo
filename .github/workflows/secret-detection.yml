# .github/workflows/secret-detection.yml

name: 'Secret Detection Scan'

# This workflow runs on any pull request targeting the 'main' branch
on:
  pull_request:
    branches: [ main ]

jobs:
  # The job that will run your scanner
  gitleaks-scan:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository's code
      # fetch-depth: 0 is CRUCIAL for git diff to work correctly between the two SHAs.
      - name: 'Check out repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up the Node.js environment
      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Step 3: Install your secret scanner from npm
      - name: 'Install gitleaks-secret-scanner'
        run: npm install -g gitleaks-secret-scanner

      # Step 4: Run the scan using 'ci' mode
      # continue-on-error: true ensures that the workflow doesn't stop here,
      # so we can upload the report artifact in the next step.
      - name: 'Scan for secrets in pull request'
        id: scan
        continue-on-error: true
        env:
          # Set the required environment variables for your scanner
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: gitleaks-secret-scanner --diff-mode ci --report-format json

      # Step 5: Upload the HTML report as a workflow artifact
      # if: always() ensures this step runs even if the previous step failed.
      - name: 'Upload HTML report artifact'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-scan-report
          path: gitleaks-report.json
      
      # Step 6: Fail the job if the scan step found secrets
      # This step checks the outcome of the 'scan' step and fails the workflow explicitly.
      - name: 'Fail job if secrets were detected'
        if: steps.scan.outcome == 'failure'
        run: |
          echo "‚ùå Secrets were detected in the pull request. See the 'gitleaks-scan-report' artifact for details."
          exit 1